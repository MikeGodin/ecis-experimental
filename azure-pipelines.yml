# 
# dependency manager - yarn
#   about:
#     - http://yarnpkg.com/en/docs/cli
#   notes:
#     - package.json must include "test": "CI=true react-scripts test --env=jsdom",
#        or yarn test will hang
#          

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: cd ClientApp && yarn install
  displayName: 'Script: yarn install'

- script: cd ClientApp && yarn test --ci
  displayName: 'Script: yarn test'

- script: cd ClientApp && yarn run build
  displayName: 'Script: yarn run build'

#
# ISSUE: provider Microsoft.EntityFrameworkCore.Sqlite does not support --idempotent
#
#- script: dotnet ef migrations script --output $(Build.ArtifactStagingDirectory)/react-spa-db.sql --context EcisContext  --idempotent
#  displayName: 'Script: dotnet ef migrations script'

- script: dotnet ef migrations script --output $(Build.ArtifactStagingDirectory)/react-spa-db.sql --context EcisContext
  displayName: 'Script: dotnet ef migrations script'

- script: cat $(Build.ArtifactStagingDirectory)/react-spa-db.sql
  displayName: 'Script: cat react-spa-db.sql'
  
- task: ArchiveFiles@2
  displayName: 'Archive Files'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/ClientApp/build' 
    includeRootFolder: false
    archiveType: 'zip'
    #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
    archiveFile: '$(Build.ArtifactStagingDirectory)/react-spa.zip' 
    replaceExistingArchive: true 

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts: react-spa'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/react-spa.zip'
    artifactName: react-spa

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts: react-spa-db'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/react-spa-db.sql'
    artifactName: react-spa-db